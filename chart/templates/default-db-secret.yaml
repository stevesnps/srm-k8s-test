{{- if and (and .Values.features.mariadb (not .Values.mariadb.existingSecret)) (not .Values.web.database.credentialSecret) -}}
{{- $default := lookup "v1" "Secret" .Release.Namespace (include "srm-web.default.db.secret" .) -}}
{{- $dbPassword := dig "data" "mariadb-password" (randAlphaNum 10 | b64enc) $default | b64dec -}}
{{- $dbRootPassword := dig "data" "mariadb-root-password" (randAlphaNum 10 | b64enc) $default | b64dec -}}
{{- $dbReplicationPassword := dig "data" "mariadb-replication-password" (randAlphaNum 10 | b64enc) $default | b64dec -}}
{{- $dbCredential := (printf "swa.db.user = \"\"\"codedx\"\"\"\nswa.db.password = \"\"\"%s\"\"\"" $dbPassword) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "srm-web.default.db.secret" . | quote }}
  labels:
    {{- include "srm-web.labels" . | nindent 4 }}
type: Opaque
data:
  # lookup requires cluster access, so a disconnected context (e.g., dry-run, template) has no password reuse with generated password(s)
  mariadb-password: {{ $dbPassword | b64enc }}
  mariadb-root-password: {{ $dbRootPassword | b64enc }}
  mariadb-replication-password: {{ $dbReplicationPassword | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "srm-web.default.web.db.secret" . | quote }}
  labels:
    {{- include "srm-web.labels" . | nindent 4 }}
type: Opaque
data:
  db.props: {{ $dbCredential | b64enc }}
{{- end -}}